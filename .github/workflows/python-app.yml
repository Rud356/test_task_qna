# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    services:
          postgres:
            image: postgres:latest # Or a specific version like postgres:15
            env:
              POSTGRES_DB: demo_db
              POSTGRES_USER: postgres
              POSTGRES_PASSWORD: testpwd123
            ports:
              - 5433:5432 # Maps port 5432 on the service container to the host
            options: >- # Health check to ensure the database is ready
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5
  
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v3
      with:
        python-version: "3.13"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev,migration]
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with ruff
      run: |
        ruff check ./src

    - name: Type check with mypy in strict mode
      run: |
        mypy --strict ./src

    - name: Lint with sphinx
      run: |
        sphinx-lint ./src

    - name: Setup database
      run: |
        alembic upgrade head

    - name: Test with pytest
      run: |
        pytest ./tests
